--------------------------------------------------------
--  File created - Pazartesi-Þubat-14-2022   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table PRODUCTS
--------------------------------------------------------

  CREATE TABLE "YUSUF"."PRODUCTS" 
   (	"PRODUCT_ID" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"PRODUCT_NAME" NVARCHAR2(50), 
	"PRICE" NUMBER(7,3), 
	"IS_ENABLED" NUMBER(1,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table POLICY_DETAILS
--------------------------------------------------------

  CREATE TABLE "YUSUF"."POLICY_DETAILS" 
   (	"POLICY_ID" NUMBER, 
	"CUSTOMER_ID" CHAR(9 BYTE), 
	"HEIGHT" NUMBER(3,2), 
	"WEIGHT" NUMBER(5,2), 
	"RELATIONSHIP" NUMBER(1,0), 
	"JOB" NVARCHAR2(60)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table POLICIES
--------------------------------------------------------

  CREATE TABLE "YUSUF"."POLICIES" 
   (	"POLICY_ID" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"BILL_ID" NUMBER, 
	"CUSTOMER_ID" CHAR(9 BYTE), 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"POLICY_STATUS" NUMBER(2,0), 
	"PRODUCT_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table OFFERS
--------------------------------------------------------

  CREATE TABLE "YUSUF"."OFFERS" 
   (	"OFFER_NUMBER" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"SELECTED_PRODUCT" NUMBER, 
	"BILL_ID" NUMBER, 
	"OFFER_STATUS" NUMBER(2,0), 
	"CUSTOMER_ID" CHAR(9 BYTE), 
	"END_TIME" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table OFFER_DETAILS
--------------------------------------------------------

  CREATE TABLE "YUSUF"."OFFER_DETAILS" 
   (	"OFFER_ID" NUMBER, 
	"CUSTOMER_ID" CHAR(9 BYTE), 
	"HEIGHT" NUMBER(3,2), 
	"WEIGHT" NUMBER(5,2), 
	"RELATIONSHIP" NUMBER(1,0), 
	"JOB" NVARCHAR2(60)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CUSTOMERS
--------------------------------------------------------

  CREATE TABLE "YUSUF"."CUSTOMERS" 
   (	"CUSTOMER_ID" CHAR(9 BYTE), 
	"TC_NO" CHAR(11 BYTE), 
	"PASSAPORT" NVARCHAR2(20), 
	"NAME" NVARCHAR2(50), 
	"SURNAME" NVARCHAR2(50), 
	"GENDER" NUMBER(1,0), 
	"GSM" CHAR(10 BYTE), 
	"MAIL" NVARCHAR2(20), 
	"ADDRESS" NVARCHAR2(100), 
	"BIRTHDATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table BILL_PAYMENTS
--------------------------------------------------------

  CREATE TABLE "YUSUF"."BILL_PAYMENTS" 
   (	"PAYMENT_ID" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"CARD_NO" CHAR(16 BYTE), 
	"CARD_NAME" NVARCHAR2(100), 
	"CARD_DATE_MOUNTH" NUMBER(2,0), 
	"CARD_DATE_YEAR" NUMBER(2,0), 
	"CARD_TYPE" NVARCHAR2(20)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table BILLS
--------------------------------------------------------

  CREATE TABLE "YUSUF"."BILLS" 
   (	"BILL_ID" NUMBER GENERATED ALWAYS AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"AMOUNT" NUMBER(10,5), 
	"PAYMENT_ID" NUMBER, 
	"INSTALLMENT" NUMBER(2,0) DEFAULT NULL
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PRODUCTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "YUSUF"."PRODUCTS_PK" ON "YUSUF"."PRODUCTS" ("PRODUCT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index POLICY_DETAILS_PK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "YUSUF"."POLICY_DETAILS_PK1" ON "YUSUF"."POLICY_DETAILS" ("POLICY_ID", "CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index POLICIES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "YUSUF"."POLICIES_PK" ON "YUSUF"."POLICIES" ("POLICY_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index OFFERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "YUSUF"."OFFERS_PK" ON "YUSUF"."OFFERS" ("OFFER_NUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index OFFER_CUSTOMERS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "YUSUF"."OFFER_CUSTOMERS_PK" ON "YUSUF"."OFFER_DETAILS" ("OFFER_ID", "CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CUSTOMER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "YUSUF"."CUSTOMER_PK" ON "YUSUF"."CUSTOMERS" ("CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index CUSTOMER_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "YUSUF"."CUSTOMER_UK1" ON "YUSUF"."CUSTOMERS" ("GSM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index BILLPAYMENTS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "YUSUF"."BILLPAYMENTS_PK" ON "YUSUF"."BILL_PAYMENTS" ("PAYMENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index BILLS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "YUSUF"."BILLS_PK" ON "YUSUF"."BILLS" ("BILL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Procedure SP_ADD_BILL_PAYMENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "YUSUF"."SP_ADD_BILL_PAYMENT" 
(
  V_OFFER_NUMBER IN OFFERS.OFFER_NUMBER%TYPE 
, V_CARD_NO IN BILL_PAYMENTS.CARD_NO%TYPE 
, V_CARD_NAME IN BILL_PAYMENTS.CARD_NAME%TYPE  
, V_CARD_DATE_MOUNTH IN BILL_PAYMENTS.CARD_DATE_MOUNTH%TYPE  
, V_CARD_DATE_YEAR IN BILL_PAYMENTS.CARD_DATE_YEAR%TYPE  
, V_CARD_TYPE IN BILL_PAYMENTS.CARD_TYPE%TYPE
) AS 
V_PAYMENT_ID NUMBER;
V_BILL_ID BILLS.BILL_ID%TYPE;
BEGIN

  SELECT BILL_ID INTO V_BILL_ID FROM OFFERS
  WHERE OFFER_NUMBER = V_OFFER_NUMBER;

  INSERT INTO BILL_PAYMENTS(CARD_NO, CARD_NAME, CARD_DATE_MOUNTH, CARD_DATE_YEAR, CARD_TYPE)
  VALUES(V_CARD_NO, V_CARD_NAME, V_CARD_DATE_MOUNTH, V_CARD_DATE_YEAR, V_CARD_TYPE)
  RETURNING PAYMENT_ID INTO V_PAYMENT_ID;
  
  UPDATE BILLS SET PAYMENT_ID = V_PAYMENT_ID WHERE BILL_ID = V_BILL_ID;
  
END SP_ADD_BILL_PAYMENT;

/
--------------------------------------------------------
--  DDL for Procedure SP_ADD_CUSTOMER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "YUSUF"."SP_ADD_CUSTOMER" 
(
  V_TC_NO IN CUSTOMERS.TC_NO%TYPE 
, V_PASSAPORT IN CUSTOMERS.PASSAPORT%TYPE 
, V_NAME IN CUSTOMERS.NAME%TYPE 
, V_SURNAME IN CUSTOMERS.SURNAME%TYPE 
, V_GENDER IN CUSTOMERS.GENDER%TYPE 
, V_GSM IN CUSTOMERS.GSM%TYPE 
, V_MAIL IN CUSTOMERS.MAIL%TYPE 
, V_ADDRESS IN CUSTOMERS.ADDRESS%TYPE 
, V_BIRTHDATE IN CUSTOMERS.BIRTHDATE%TYPE 
, V_CUSTOMER_ID OUT CUSTOMERS.CUSTOMER_ID%TYPE 
) AS 
V_CUSTOMER_ID_GENERATED char(9);
BEGIN
  V_CUSTOMER_ID_GENERATED := GET_RANDOM_ID();
  INSERT INTO CUSTOMERS(CUSTOMER_ID, TC_NO, PASSAPORT, NAME, SURNAME, GENDER, GSM, MAIL, ADDRESS, BIRTHDATE)
  VALUES(V_CUSTOMER_ID_GENERATED, V_TC_NO, V_PASSAPORT, V_NAME, V_SURNAME, V_GENDER, V_GSM, V_MAIL, V_ADDRESS, V_BIRTHDATE);
  V_CUSTOMER_ID := V_CUSTOMER_ID_GENERATED;
  COMMIT;
END SP_ADD_CUSTOMER;

/
--------------------------------------------------------
--  DDL for Procedure SP_ADD_OFFER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "YUSUF"."SP_ADD_OFFER" 
(
  V_OFFER_STATUS IN OFFERS.OFFER_STATUS%TYPE 
, V_CUSTOMER_ID IN OFFERS.CUSTOMER_ID%TYPE 
, V_OFFER_NUMBER OUT OFFERS.OFFER_NUMBER%TYPE 
) AS 
BEGIN
  INSERT INTO OFFERS(OFFER_STATUS, CUSTOMER_ID)
  VALUES(V_OFFER_STATUS, V_CUSTOMER_ID)
  RETURNING OFFER_NUMBER INTO V_OFFER_NUMBER;
  COMMIT;
END SP_ADD_OFFER;

/
--------------------------------------------------------
--  DDL for Procedure SP_ADD_OFFER_DETAILS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "YUSUF"."SP_ADD_OFFER_DETAILS" 
(
  V_OFFER_ID IN OFFER_DETAILS.OFFER_ID%TYPE
, V_CUSTOMER_ID IN OFFER_DETAILS.CUSTOMER_ID%TYPE 
, V_HEIGHT IN OFFER_DETAILS.HEIGHT%TYPE 
, V_WEIGHT IN OFFER_DETAILS.WEIGHT%TYPE 
, V_RELATIONSHIP IN OFFER_DETAILS.RELATIONSHIP%TYPE 
, V_JOB IN OFFER_DETAILS.JOB%TYPE 
) AS 
BEGIN
  INSERT INTO OFFER_DETAILS(OFFER_ID, CUSTOMER_ID, HEIGHT, WEIGHT, RELATIONSHIP, JOB)
  VALUES(V_OFFER_ID, V_CUSTOMER_ID, V_HEIGHT, V_WEIGHT, V_RELATIONSHIP, V_JOB);
  COMMIT;
END SP_ADD_OFFER_DETAILS;

/
--------------------------------------------------------
--  DDL for Procedure SP_ADD_POLICY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "YUSUF"."SP_ADD_POLICY" 
(
  V_OFFER_ID IN OFFERS.OFFER_NUMBER%TYPE 
, V_POLICY_STATUS IN POLICIES.POLICY_STATUS%TYPE 
, V_POLICY_NUMBER OUT POLICIES.POLICY_ID%TYPE  
) AS
V_START_TIME DATE;
V_BILL_ID BILLS.BILL_ID%TYPE;
V_CUSTOMER_ID CUSTOMERS.CUSTOMER_ID%TYPE;
V_SELECTED_PRODUCT PRODUCTS.PRODUCT_ID%TYPE;
V_CUSTOMER_COUNT NUMBER;
BEGIN

  SELECT SYSDATE INTO V_START_TIME FROM DUAL;
  
  SELECT BILL_ID, CUSTOMER_ID, SELECTED_PRODUCT INTO V_BILL_ID, V_CUSTOMER_ID, V_SELECTED_PRODUCT
  FROM OFFERS WHERE OFFER_NUMBER = V_OFFER_ID;
  
  INSERT INTO POLICIES(BILL_ID, CUSTOMER_ID, PRODUCT_ID, START_DATE, END_DATE, POLICY_STATUS)
  VALUES(V_BILL_ID, V_CUSTOMER_ID, V_SELECTED_PRODUCT, V_START_TIME, V_START_TIME + 365, V_POLICY_STATUS)
  RETURNING POLICY_ID INTO V_POLICY_NUMBER;
  
  INSERT INTO POLICY_DETAILS(POLICY_ID, CUSTOMER_ID, HEIGHT, WEIGHT, RELATIONSHIP, JOB)
  SELECT V_POLICY_NUMBER, CUSTOMER_ID, HEIGHT, WEIGHT, RELATIONSHIP, JOB 
  FROM OFFER_DETAILS WHERE OFFER_ID = V_OFFER_ID;
  
  DELETE FROM OFFER_DETAILS WHERE OFFER_ID = V_OFFER_ID;
  
  DELETE FROM OFFERS WHERE OFFER_NUMBER = V_OFFER_ID;
  
END SP_ADD_POLICY;

/
--------------------------------------------------------
--  DDL for Procedure SP_ADD_PRODUCT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "YUSUF"."SP_ADD_PRODUCT" 
(
  V_PRODUCT_NAME IN PRODUCTS.PRODUCT_NAME%TYPE 
, V_PRICE IN PRODUCTS.PRICE%TYPE 
, V_PRODUCT_ID OUT PRODUCTS.PRODUCT_ID%TYPE 
) AS 
BEGIN
  INSERT INTO PRODUCTS(PRODUCT_NAME, PRICE, IS_ENABLED)
  VALUES(V_PRODUCT_NAME, V_PRICE, 1)
  RETURNING PRODUCT_ID INTO V_PRODUCT_ID;
  COMMIT;
END SP_ADD_PRODUCT;

/
--------------------------------------------------------
--  DDL for Procedure SP_BILL_UPDATE_INSTALLMENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "YUSUF"."SP_BILL_UPDATE_INSTALLMENT" 
(
  V_OFFER_NUMBER IN OFFERS.OFFER_NUMBER%TYPE 
, V_INSTALLMENT IN BILLS.INSTALLMENT%TYPE
) AS 
V_BILL_ID BILLS.BILL_ID%TYPE;
BEGIN
  
  SELECT BILL_ID INTO V_BILL_ID FROM OFFERS
  WHERE OFFER_NUMBER = V_OFFER_NUMBER;
  
  UPDATE BILLS
  SET INSTALLMENT = V_INSTALLMENT
  WHERE BILL_ID = V_BILL_ID;
  
END SP_BILL_UPDATE_INSTALLMENT;

/
--------------------------------------------------------
--  DDL for Procedure SP_OFFER_QUERY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "YUSUF"."SP_OFFER_QUERY" 
(
  V_INSURERTC IN CUSTOMERS.TC_NO%TYPE 
, V_INSURERNAME IN CUSTOMERS.NAME%TYPE 
, V_INSURERSURNAME IN CUSTOMERS.SURNAME%TYPE  
, V_INSUREDTC IN CUSTOMERS.TC_NO%TYPE 
, V_INSUREDNAME IN CUSTOMERS.NAME%TYPE  
, V_INSUREDSURNAME IN CUSTOMERS.SURNAME%TYPE   
, V_OFFERNUMBER IN OFFERS.OFFER_NUMBER%TYPE
, V_OFFERSTATUS IN OFFERS.OFFER_STATUS%TYPE 
, V_RESULT OUT SYS_REFCURSOR 
) AS 
BEGIN

  OPEN V_RESULT FOR
  SELECT O.OFFER_NUMBER, O.SELECTED_PRODUCT, O.BILL_ID, O.OFFER_STATUS, O.CUSTOMER_ID, O.END_TIME FROM OFFERS O
  JOIN CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
  JOIN OFFER_DETAILS OD ON O.OFFER_NUMBER = OD.OFFER_ID
  JOIN CUSTOMERS CD ON OD.CUSTOMER_ID = CD.CUSTOMER_ID
  WHERE (V_OFFERNUMBER IS NULL OR O.OFFER_NUMBER = V_OFFERNUMBER) AND
  (V_INSURERTC IS NULL OR C.TC_NO = V_INSURERTC) AND
  (V_INSUREDTC IS NULL OR CD.TC_NO = V_INSUREDTC) AND
  (V_INSURERNAME IS NULL OR C.NAME = V_INSURERNAME) AND
  (V_INSUREDNAME IS NULL OR CD.NAME = V_INSUREDNAME) AND
  (V_INSURERSURNAME IS NULL OR C.SURNAME = V_INSURERSURNAME) AND
  (V_INSUREDSURNAME IS NULL OR CD.SURNAME = V_INSUREDSURNAME) AND
  (V_OFFERSTATUS IS NULL OR O.OFFER_STATUS = V_OFFERSTATUS);
  
END SP_OFFER_QUERY;

/
--------------------------------------------------------
--  DDL for Procedure SP_OFFER_UPDATE_PRODUCT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "YUSUF"."SP_OFFER_UPDATE_PRODUCT" 
(
  V_OFFER_NUMBER IN OFFERS.OFFER_NUMBER%TYPE  
, V_SELECTED_PRODUCT IN OFFERS.SELECTED_PRODUCT%TYPE 
, V_OFFER_STATUS IN OFFERS.OFFER_STATUS%TYPE
, V_BILL_ID OUT OFFERS.BILL_ID%TYPE
, V_PRICE OUT BILLS.AMOUNT%TYPE
) AS 
V_CUSTOMER_COUNT NUMBER;
V_PRODUCT_PRICE NUMBER;
V_END_TIME DATE;
V_C_OFFER_STATUS OFFERS.OFFER_STATUS%TYPE;
V_V_OFFER_STATUS OFFERS.OFFER_STATUS%TYPE;
BEGIN
  
  SELECT SYSDATE + 1 INTO V_END_TIME FROM DUAL;
  
  SELECT BILL_ID, OFFER_STATUS INTO V_BILL_ID, V_C_OFFER_STATUS FROM OFFERS WHERE OFFER_NUMBER = V_OFFER_NUMBER;
  
  IF V_C_OFFER_STATUS > V_OFFER_STATUS THEN
    V_V_OFFER_STATUS := V_C_OFFER_STATUS;
  ELSE
    V_V_OFFER_STATUS := V_OFFER_STATUS;
  END IF;
  
  SELECT COUNT(CUSTOMER_ID) INTO V_CUSTOMER_COUNT FROM OFFER_DETAILS WHERE OFFER_ID = V_OFFER_NUMBER;
  
  SELECT PRICE INTO V_PRODUCT_PRICE FROM PRODUCTS WHERE PRODUCT_ID = V_SELECTED_PRODUCT;
  
  V_PRICE := V_CUSTOMER_COUNT * V_PRODUCT_PRICE;
  
  IF  V_BILL_ID IS NULL THEN
  
      INSERT INTO BILLS(AMOUNT)
      VALUES(V_PRICE)
      RETURNING BILL_ID INTO V_BILL_ID;
      
      UPDATE OFFERS 
      SET SELECTED_PRODUCT = V_SELECTED_PRODUCT, 
      OFFER_STATUS = V_V_OFFER_STATUS,
      BILL_ID = V_BILL_ID,
      END_TIME = V_END_TIME
      WHERE OFFER_NUMBER = V_OFFER_NUMBER;
  
  ELSE
  
      UPDATE OFFERS 
      SET SELECTED_PRODUCT = V_SELECTED_PRODUCT, 
      OFFER_STATUS = V_V_OFFER_STATUS,
      END_TIME = V_END_TIME
      WHERE OFFER_NUMBER = V_OFFER_NUMBER;
      
      UPDATE BILLS 
      SET AMOUNT = V_PRICE
      WHERE BILL_ID = V_BILL_ID;
  
  END IF;
  
  COMMIT;
END SP_OFFER_UPDATE_PRODUCT;

/
--------------------------------------------------------
--  DDL for Procedure SP_POLICY_QUERY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "YUSUF"."SP_POLICY_QUERY" 
(
  V_INSURERTC IN CUSTOMERS.TC_NO%TYPE 
, V_INSURERNAME IN CUSTOMERS.NAME%TYPE 
, V_INSURERSURNAME IN CUSTOMERS.SURNAME%TYPE  
, V_INSUREDTC IN CUSTOMERS.TC_NO%TYPE 
, V_INSUREDNAME IN CUSTOMERS.NAME%TYPE  
, V_INSUREDSURNAME IN CUSTOMERS.SURNAME%TYPE
, V_POLICYNUMBER IN POLICIES.POLICY_ID%TYPE 
, V_POLICYSTATUS IN POLICIES.POLICY_STATUS%TYPE 
, V_RESULT OUT SYS_REFCURSOR 
) AS 
BEGIN

  OPEN V_RESULT FOR
  SELECT P.POLICY_ID, P.BILL_ID, P.CUSTOMER_ID, P.START_DATE, P.END_DATE, P.POLICY_STATUS, P.PRODUCT_ID FROM POLICIES P
  JOIN CUSTOMERS C ON P.CUSTOMER_ID = C.CUSTOMER_ID
  JOIN POLICY_DETAILS PD ON P.POLICY_ID = PD.POLICY_ID
  JOIN CUSTOMERS CD ON PD.CUSTOMER_ID = CD.CUSTOMER_ID
  WHERE (V_POLICYNUMBER IS NULL OR P.POLICY_ID = V_POLICYNUMBER) AND
  (V_INSURERTC IS NULL OR C.TC_NO = V_INSURERTC) AND
  (V_INSUREDTC IS NULL OR CD.TC_NO = V_INSUREDTC) AND
  (V_INSURERNAME IS NULL OR C.NAME = V_INSURERNAME) AND
  (V_INSUREDNAME IS NULL OR CD.NAME = V_INSUREDNAME) AND
  (V_INSURERSURNAME IS NULL OR C.SURNAME = V_INSURERSURNAME) AND
  (V_INSUREDSURNAME IS NULL OR CD.SURNAME = V_INSUREDSURNAME) AND
  (V_POLICYSTATUS IS NULL OR P.POLICY_STATUS = V_POLICYSTATUS);
  
END SP_POLICY_QUERY;

/
--------------------------------------------------------
--  DDL for Procedure SP_UPDATE_PRODUCT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "YUSUF"."SP_UPDATE_PRODUCT" 
(
  V_PRODUCT_ID IN PRODUCTS.PRODUCT_ID%TYPE  
, V_PRODUCT_NAME IN PRODUCTS.PRODUCT_NAME%TYPE  
, V_PRODUCT_PRICE IN PRODUCTS.PRICE%TYPE  
, V_IS_ENABLED IN PRODUCTS.IS_ENABLED%TYPE  
) AS 
BEGIN
  UPDATE PRODUCTS 
  SET PRODUCT_NAME = V_PRODUCT_NAME, 
  PRICE = V_PRODUCT_PRICE, 
  IS_ENABLED = V_IS_ENABLED
  WHERE PRODUCT_ID = V_PRODUCT_ID;
  COMMIT;
END SP_UPDATE_PRODUCT;

/
--------------------------------------------------------
--  DDL for Function GET_RANDOM_ID
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE FUNCTION "YUSUF"."GET_RANDOM_ID" RETURN CHAR AS 
retval CHAR(9);
BEGIN
  select dbms_random.string('X', 9) str INTO retval from dual;
  RETURN RETVAL;
END GET_RANDOM_ID;

/
--------------------------------------------------------
--  Constraints for Table PRODUCTS
--------------------------------------------------------

  ALTER TABLE "YUSUF"."PRODUCTS" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."PRODUCTS" MODIFY ("PRODUCT_NAME" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."PRODUCTS" MODIFY ("PRICE" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."PRODUCTS" MODIFY ("IS_ENABLED" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."PRODUCTS" ADD CONSTRAINT "PRODUCTS_PK" PRIMARY KEY ("PRODUCT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "YUSUF"."PRODUCTS" ADD CONSTRAINT "PRODUCTS_CHK1" CHECK (IS_ENABLED in (0,1)) ENABLE;
--------------------------------------------------------
--  Constraints for Table POLICY_DETAILS
--------------------------------------------------------

  ALTER TABLE "YUSUF"."POLICY_DETAILS" ADD CONSTRAINT "POLICY_DETAILS_PK" PRIMARY KEY ("POLICY_ID", "CUSTOMER_ID")
  USING INDEX (CREATE UNIQUE INDEX "YUSUF"."POLICY_DETAILS_PK1" ON "YUSUF"."POLICY_DETAILS" ("POLICY_ID", "CUSTOMER_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" )  ENABLE;
  ALTER TABLE "YUSUF"."POLICY_DETAILS" MODIFY ("POLICY_ID" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."POLICY_DETAILS" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."POLICY_DETAILS" MODIFY ("HEIGHT" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."POLICY_DETAILS" MODIFY ("WEIGHT" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."POLICY_DETAILS" MODIFY ("RELATIONSHIP" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."POLICY_DETAILS" MODIFY ("JOB" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table POLICIES
--------------------------------------------------------

  ALTER TABLE "YUSUF"."POLICIES" MODIFY ("POLICY_ID" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."POLICIES" MODIFY ("BILL_ID" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."POLICIES" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."POLICIES" MODIFY ("START_DATE" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."POLICIES" MODIFY ("END_DATE" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."POLICIES" MODIFY ("POLICY_STATUS" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."POLICIES" MODIFY ("PRODUCT_ID" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."POLICIES" ADD CONSTRAINT "POLICIES_PK" PRIMARY KEY ("POLICY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OFFERS
--------------------------------------------------------

  ALTER TABLE "YUSUF"."OFFERS" MODIFY ("OFFER_NUMBER" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."OFFERS" ADD CONSTRAINT "OFFERS_PK" PRIMARY KEY ("OFFER_NUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "YUSUF"."OFFERS" MODIFY ("OFFER_STATUS" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."OFFERS" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table OFFER_DETAILS
--------------------------------------------------------

  ALTER TABLE "YUSUF"."OFFER_DETAILS" MODIFY ("OFFER_ID" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."OFFER_DETAILS" MODIFY ("CUSTOMER_ID" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."OFFER_DETAILS" MODIFY ("HEIGHT" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."OFFER_DETAILS" MODIFY ("WEIGHT" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."OFFER_DETAILS" MODIFY ("RELATIONSHIP" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."OFFER_DETAILS" MODIFY ("JOB" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."OFFER_DETAILS" ADD CONSTRAINT "OFFER_CUSTOMERS_PK" PRIMARY KEY ("OFFER_ID", "CUSTOMER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CUSTOMERS
--------------------------------------------------------

  ALTER TABLE "YUSUF"."CUSTOMERS" MODIFY ("NAME" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."CUSTOMERS" ADD CONSTRAINT "CUSTOMER_UK1" UNIQUE ("GSM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "YUSUF"."CUSTOMERS" ADD CONSTRAINT "CUSTOMER_PK" PRIMARY KEY ("CUSTOMER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "YUSUF"."CUSTOMERS" MODIFY ("SURNAME" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."CUSTOMERS" MODIFY ("GENDER" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."CUSTOMERS" MODIFY ("GSM" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."CUSTOMERS" MODIFY ("MAIL" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."CUSTOMERS" MODIFY ("ADDRESS" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."CUSTOMERS" MODIFY ("BIRTHDATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BILL_PAYMENTS
--------------------------------------------------------

  ALTER TABLE "YUSUF"."BILL_PAYMENTS" MODIFY ("PAYMENT_ID" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."BILL_PAYMENTS" MODIFY ("CARD_NO" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."BILL_PAYMENTS" MODIFY ("CARD_NAME" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."BILL_PAYMENTS" MODIFY ("CARD_DATE_MOUNTH" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."BILL_PAYMENTS" MODIFY ("CARD_DATE_YEAR" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."BILL_PAYMENTS" MODIFY ("CARD_TYPE" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."BILL_PAYMENTS" ADD CONSTRAINT "BILLPAYMENTS_PK" PRIMARY KEY ("PAYMENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BILLS
--------------------------------------------------------

  ALTER TABLE "YUSUF"."BILLS" MODIFY ("BILL_ID" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."BILLS" MODIFY ("AMOUNT" NOT NULL ENABLE);
  ALTER TABLE "YUSUF"."BILLS" ADD CONSTRAINT "BILLS_PK" PRIMARY KEY ("BILL_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table POLICY_DETAILS
--------------------------------------------------------

  ALTER TABLE "YUSUF"."POLICY_DETAILS" ADD CONSTRAINT "POLICY_DETAILS_FK1" FOREIGN KEY ("POLICY_ID")
	  REFERENCES "YUSUF"."POLICIES" ("POLICY_ID") ENABLE;
  ALTER TABLE "YUSUF"."POLICY_DETAILS" ADD CONSTRAINT "POLICY_DETAILS_FK2" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "YUSUF"."CUSTOMERS" ("CUSTOMER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table POLICIES
--------------------------------------------------------

  ALTER TABLE "YUSUF"."POLICIES" ADD CONSTRAINT "POLICIES_FK1" FOREIGN KEY ("BILL_ID")
	  REFERENCES "YUSUF"."BILLS" ("BILL_ID") ENABLE;
  ALTER TABLE "YUSUF"."POLICIES" ADD CONSTRAINT "POLICIES_FK2" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "YUSUF"."CUSTOMERS" ("CUSTOMER_ID") ENABLE;
  ALTER TABLE "YUSUF"."POLICIES" ADD CONSTRAINT "POLICIES_FK3" FOREIGN KEY ("PRODUCT_ID")
	  REFERENCES "YUSUF"."PRODUCTS" ("PRODUCT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFFERS
--------------------------------------------------------

  ALTER TABLE "YUSUF"."OFFERS" ADD CONSTRAINT "OFFERS_FK1" FOREIGN KEY ("SELECTED_PRODUCT")
	  REFERENCES "YUSUF"."PRODUCTS" ("PRODUCT_ID") ENABLE;
  ALTER TABLE "YUSUF"."OFFERS" ADD CONSTRAINT "OFFERS_FK2" FOREIGN KEY ("BILL_ID")
	  REFERENCES "YUSUF"."BILLS" ("BILL_ID") ENABLE;
  ALTER TABLE "YUSUF"."OFFERS" ADD CONSTRAINT "OFFERS_FK3" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "YUSUF"."CUSTOMERS" ("CUSTOMER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OFFER_DETAILS
--------------------------------------------------------

  ALTER TABLE "YUSUF"."OFFER_DETAILS" ADD CONSTRAINT "OFFER_CUSTOMERS_FK1" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "YUSUF"."CUSTOMERS" ("CUSTOMER_ID") ENABLE;
  ALTER TABLE "YUSUF"."OFFER_DETAILS" ADD CONSTRAINT "OFFER_CUSTOMERS_FK2" FOREIGN KEY ("OFFER_ID")
	  REFERENCES "YUSUF"."OFFERS" ("OFFER_NUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BILLS
--------------------------------------------------------

  ALTER TABLE "YUSUF"."BILLS" ADD CONSTRAINT "BILLS_FK1" FOREIGN KEY ("PAYMENT_ID")
	  REFERENCES "YUSUF"."BILL_PAYMENTS" ("PAYMENT_ID") ENABLE;
